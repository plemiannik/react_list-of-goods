{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","console","log","sort","a","b","LENGTH","length","ALPABET","localeCompare","reverse","App","state","NONE","setState","sortByName","sortByLength","reset","className","type","this","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmBK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAsBzB,OAnBAI,QAAQC,IAAIJ,EAAUC,GAEtBC,EAAaG,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKJ,EAASY,OACZ,OAAOF,EAAEG,OAASF,EAAEE,OAEtB,KAAKb,EAASc,QACZ,OAAOJ,EAAEK,cAAcJ,GAEzB,QACE,OAAO,MAITN,GACFC,EAAaU,UAGRV,G,SA1CJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA6CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEH,QAAU,WACR,EAAKI,UAAS,SAAAF,GAAK,MAAK,CACtBb,YAAaa,EAAMb,gBARzB,EAYEgB,WAAa,WACX,EAAKD,SAAS,CAAEhB,SAAUJ,EAASc,WAbvC,EAgBEQ,aAAe,WACb,EAAKF,SAAS,CAAEhB,SAAUJ,EAASY,UAjBvC,EAoBEW,MAAQ,WACN,EAAKH,SAAS,CACZhB,SAAUJ,EAASmB,KACnBd,YAAY,KAvBlB,4CA2BE,WACE,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,KAAKR,MAAMd,WAAaJ,EAASc,QAC7B,0BACA,iBAENa,QAASD,KAAKL,WAPhB,iCAYA,wBACEI,KAAK,SACLD,UACEE,KAAKR,MAAMd,WAAaJ,EAASY,OAC7B,6BACA,oBAENe,QAASD,KAAKJ,aAPhB,4BAYA,wBACEG,KAAK,SACLD,WAC4B,IAA1BE,KAAKR,MAAMb,WACP,6BACA,oBAENsB,QAASD,KAAKV,QAPhB,sBAYEU,KAAKR,MAAMd,WAAaJ,EAASmB,OACN,IAA1BO,KAAKR,MAAMb,aAEV,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASD,KAAKH,MAHhB,sBASN,6BACE,6BACGrB,EAAkBD,EAAiByB,KAAKR,OACtCU,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,kBAlF/C,GAAyBC,aC3DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9ca196ca.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByName = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              this.state.sortType !== SortType.ALPABET\n                ? 'button is-info is-light'\n                : 'button is-info'\n            }\n            onClick={this.sortByName}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.sortType !== SortType.LENGTH\n                ? 'button is-success is-light'\n                : 'button is-success'\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.isReversed !== true\n                ? 'button is-warning is-light'\n                : 'button is-warning'\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE\n          || this.state.isReversed === true)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state)\n              .map(good => <li data-cy=\"Good\">{good}</li>)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}